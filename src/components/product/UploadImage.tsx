import React, { useState } from "react";
import { Button, CircularProgress } from "@mui/material";
import { request } from "@/request/request"; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ç–≤–æ–π `request.ts`

const UploadImage: React.FC = () => {
  const [file, setFile] = useState<File | null>(null);
  const [loading, setLoading] = useState(false);

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    if (event.target.files && event.target.files[0]) {
      setFile(event.target.files[0]); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    }
  };

  const handleUpload = async () => {
    if (!file) {
      alert("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏!");
      return;
    }

    setLoading(true);
    const formData = new FormData();
    formData.append("file", file); // üëà –î–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∏–º–µ–Ω–µ–º –≤ NestJS

    try {
      const response = await request("post", "/spares/image", formData);
      console.log("–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω:", response.data);
      alert(`–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: ${response.data.filename}`);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", error);
      alert("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞!");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{ textAlign: "center", padding: "20px" }}>
      <input type="file" onChange={handleFileChange} />
      <br />
      <Button
        variant="contained"
        color="primary"
        onClick={handleUpload}
        disabled={loading}
        style={{ marginTop: "10px" }}
      >
        {loading ? <CircularProgress size={24} /> : "–ó–∞–≥—Ä—É–∑–∏—Ç—å"}
      </Button>
    </div>
  );
};

export default UploadImage;
